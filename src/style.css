@import url("https://fonts.googleapis.com/css2?family=Open Sans:wght@400;800&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap");

main { position: absolute; top: 100px; left: 100px; }
body {
  margin: 0;
  padding: 0;
  background-color: black;
}

canvas {
  display: block;
}

/*Make dat gui panel unselectable so it doesent get selected during mouse drag*/
#gui {  
  -moz-user-select: none;
  -webkit-user-select: none;
  -ms-user-select: none;
  -o-user-select: none;
  user-select: none;
}
a {color: white;
}
a:link {
  text-decoration: none;
}

#footerleft {
  font-family: "Open sans", sans-serif;
  position: absolute;
  display: block;
  width: 100%;
  font-size: 70%;
  bottom: 3px;
  left: 5px;
  z-index: 1000;
  color: #f2f5f0;
  font-size: 0.6em;
  opacity: 0.4;
  text-align: left;
  text-decoration: none;
  position: fixed;
} 

#footerright {
  font-family: "Open sans", sans-serif;
  position: absolute;
  display: block;
  width: 100%;
  font-size: 70%;
  bottom: 3px;
  right: 5px;
  z-index: 1000;
  color: #f2f5f0;
  font-size: 0.6em;
  opacity: 0.4;
  text-align: right;
  text-decoration: none;
  position: fixed;
} 

.highlight-perihelion input[type="text"] {
  background: none !important;
  border: none !important;
  color: grey !important;
  font-weight: bold !important;
  text-align: right !important;
  pointer-events: none !important;
}

.dg {
  z-index: 10 !important;
}

/* 1) Hide the native checkbox visuals */
.dg li .c input[type="checkbox"] {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  width: 32px;
  height: 16px;
  background: #ccc;
  border-radius: 8px;
  position: relative;
  outline: none;
  cursor: pointer;
  transition: background 0.2s ease;
}

/* 2) The “knob” */
.dg li .c input[type="checkbox"]::after {
  content: "";
  position: absolute;
  top: 2px;
  left: 2px;
  width: 12px;
  height: 12px;
  background: white;
  border-radius: 50%;
  box-shadow: 0 1px 2px rgba(0,0,0,0.3);
  transition: left 0.2s ease;
}

/* 3) Checked state */
.dg li .c input[type="checkbox"]:checked {
  background: #4caf50;
}

.dg li .c input[type="checkbox"]:checked::after {
  left: 18px;
}

/* first reset the default on everything */
.dg li .c {
  overflow: visible !important;
}
/* then only clamp the boolean rows */
.dg li.cr.boolean .c {
  overflow: hidden;
}

.star-label {
  position: absolute;      /* our CSS2DRenderer will handle top/left */
  transform: translate(-50%, -120%); /* center + lift above */
  padding: 2px 6px;
  background: rgba(0, 0, 0, 0.4);
  backdrop-filter: blur(4px);
  border-radius: 4px;
  font-family: 'Open Sans' !important;
  font-size: 12px;
  font-weight: 500;
  color: grey !important;
  text-shadow: 0 0 4px rgba(0, 0, 0, 0.7);
  white-space: nowrap;
  pointer-events: none;
  user-select: none;
}

#guiWidthToggle {
  position:fixed;                  /* follow the viewport */
  width:26px;                      /* finger target */
  writing-mode:vertical-rl;
  text-orientation:mixed;
  font:13px/1 sans-serif;
  color:#fff;
  background:rgba(0,0,0,.35);
  cursor:pointer;
  user-select:none;
  touch-action:manipulation;
  z-index:1000;                    /* above the canvas & GUI */
}